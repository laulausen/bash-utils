#!/bin/bash

log() {
  VARS_TO_UNSET=""
  if [ -z ${a_COLORS} ];then
    a_COLORS=( GRAY RED GREEN YELLOW BLUE PURPURE CYAN WHITE )
    i=0
    while [ "$i" -lt 8 ]; do
      COL=${a_COLORS[$i]}; VAL="'1;9$i'"
      VAL_="'\033[1;9${i}m'"
      eval "$COL=$VAL_"
      COL_B=${COL}_BOLD; VAL_b="0;9$((i+1))"
      COL_B_="\033["
      COL_B_="'${COL_B_}${VAL_b}m'"
      eval "$COL_B=$COL_B_"
      i=$((i+1))
    done
    BLACK='\033[0m'
  fi
  ## log levels ##
  I=$GREEN
  V=$LIGHT_BLUE
  D=$LIGHT_GREY
  E=$RED
  W=$ORANGE
  [ -z "$LOG_LEVEL" ] && LOG_LEVEL="DEBUG"

  COLOR=${!1}
  LEVEL=$1
  LEVELS=""
  VARS_TO_UNSET="$VARS_TO_UNSET COLOR LEVEL LEVELS"
  case "$LOG_LEVEL" in
        INFO)
                LEVELS="I E"
                ;;
        VERBOSE)
                LEVELS="I V E W"
                ;;
        DEBUG)
                LEVELS="I V D E W"
                ;;
        ERROR)
                LEVELS="E"
                ;;
        WARN)
                LEVELS="E I W"
                ;;
        QUIET)
                LEVELS=""
                ;;
  esac

  if [ ! -z "$(echo $LEVELS | grep $LEVEL)" ]; then
        [ -n $SSH_TTY ] && LOG_DEST=$SSH_TTY || LOG_DEST=/dev/fd/1
        ma=""
        args=( "$@" )
        j=1
        while [ $j -lt $# ]; do
                [[ ${args[j]} =~ ^-(e|-exit) ]] && WITH_EXIT=1 || {
                        ma="${ma}${args[j]} "
                        status=${args[j]}
                }
                j=$((j+1))
        done
        ( printf "    ${WHITE}[ ${YELLOW}${LEVEL} ${WHITE}] ${BLACK}: ${COLOR}${ma}${BLACK} \n" > $LOG_DEST ) 2> /dev/null || printf "    ${WHITE}[ ${YELLOW}${LEVEL} ${WHITE}] ${BLACK}: ${COLOR}${ma}${BLACK} \n" > /dev/fd/1
  fi
  [ $WITH_EXIT ] && [ "$LEVEL" = "E" ] && [[ $status =~ ^[0-9]+ ]] && exit $status
  VARS_TO_UNSET="$VARS_TO_UNSET LOG_DEST ma args j status VARS_TO_UNSET"
  for v in $VARS_TO_UNSET; do unset $v; done; unset v
}
